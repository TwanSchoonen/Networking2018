#+begin_src plantuml :file classDiagram.png
@startuml
skinparam {
  monochrome true
}

class Car {
  Point Position
  bool available
  int numberOfPassengers
  socket

  findRoute(Point destination)
}

class Area {
  Point[] border
  
}

class Center {
  messageQueue

  enqueue(Client client, int numberOfPassengers, Point destination)
  dequeue(Client client, int numberOfPassengers, Point destination)
  findClosestCar(Point location, Point carLocation)
  isInArea(Point point)
  sendCar(Point location, int numberOfPassengers, Point destination)
  putInCarList(Car car)
  removeFromCarList(Car car) 
}

class Database {
  REST support
  getClientInformation(clientID);
}

class App {
  
  orderCar(Client client, int numberOfPassengers, Point destination)
}

class Payment {
  double balance
  externalBankAPI

  makeDeposit(double amount)
  getCash(double amount)
}

class Client {
  Point location
  int[] optionArray
  double balance

  createClient(int[] optionArray, double balance = 0)
  addLocation(Point location)
  serialize()
}

App "1" -- "*" Client
App "1" -- "*" Center
Center "1" -- "*" Car
Center "1" -- "1" Area
App "1" -- "1" Database
Database "1" -- "*" Client
Client "1" -- "1" Payment

@enduml
#+END_SRC

#+RESULTS:
[[file:classDiagram.png]]
