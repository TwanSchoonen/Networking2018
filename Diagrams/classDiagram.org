#+begin_src plantuml :file classDiagram.png
@startuml
skinparam {
  monochrome true
}

class Car {
  Client client
  bool available
  Point destination
  Point position
  tuple distance

  update()
  update_distance()
  update_pos()
  move()
  choose_movement()
  choose_movement_in(list possible_moves)
  go_to(list data)
  go_to_location()
  make_available
  find_route(Point destination)

}

class Center {
  String name
  String address
  String port
  int amount_of_cars
  CenterServer server
  MapSocketClient map_client
  message_queue

  find_car(Request req)
  find_losest_car(Point location, Point destination)
  pop_from_queue()
  main()

}

class Database {
  REST support
  get_client_information(String user_name, String password);
  put_client_information(Client client, String password)
  post_client_information(Client client, String password)
  delete_client_information(String user_name, String password)
}

class App {
  String server_ip
  String message_queue_ip

  new_car_request(Request request)
  register_new_user()
  log_in()
  main()
}

class Request {
  String user_name
  String location_center
  Point client_location
  int no_passengers
  String destination_center
  Point destination_location

  serialize()
}


class Client {
  String id
  String user_name
  String first_name
  String last_name
  String birth_date
  String address
  float balance
  String password_hash

  hash_password(String password)
  verify_password(String password)
  serialize()
}

class Map {
  Mapmodel model
  MapView view
  MapControl control

  add_client(Client client)
  add_center(Center center)
  add_cars(Car[] cars)
  draw_main(Center[] centers)
  draw_center(Car[] cars, Client[] clients)
}

App "1" -- "*" Client
App "1" -- "1" Request
App "1" -- "*" Center
Center "1" -- "*" Car
Center "*" -- "1" Map
Map "1" -- "*" Car
App "1" -- "1" Database
Database "1" -- "*" Client

@enduml
#+END_SRC

#+RESULTS:
[[file:classDiagram.png]]
